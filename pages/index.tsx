import Head from "next/head";
import styles from "@/styles/Home.module.scss";
import Header from "@/components/common/Header";
import { useState, useEffect } from "react";
import { useSession } from "next-auth/react";
import useSpotify from "@/hooks/useSpotify";
import SmallCardCarousel from "@/components/common/SmallCardCarousel";

export default function Home() {
  const spotifyApi = useSpotify();
  const { data: session, status: sessionStatus } = useSession();
  const [newReleases, setNewReleases] = useState([]);
  const [featuredPlaylists, setFeaturedPlaylists] = useState([]);
  const [hotThisWeek, setHotThisWeek] = useState([]);

  useEffect(() => {
    if (spotifyApi.getAccessToken()) {
      // API call to get new releases
      spotifyApi.getNewReleases().then((data: any) => {
        setNewReleases(
          data.body.albums.items.map((release: any) => {
            return {
              name: release.name,
              img: release.images[1].url,
              cardColors: { header: "#f35e5e", body: "#dafcf6" },
            };
          })
        );
      });

      // API call for hot artists playlists
      spotifyApi.getMyTopArtists().then((data: any) => {
        // setHotThisWeek(
        //   data.body.items
        //     .filter((artist: any) => artist.genres.includes("edm"))
        //     .map((artist: any) => {
        //       return {
        //         name: artist.name,
        //         img: artist.images[2].url,
        //         genres: artist.genres,
        //         cardColors: { header: "#C8F377", body: "#D3A8FF" },
        //       };
        //     })
        // );
        setHotThisWeek(
          data.body.items.map((artist: any) => {
            return {
              id: artist.id,
              name: artist.name,
              img: artist.images[2].url,
              genres: artist.genres,
              cardColors: { header: "#C8F377", body: "#D3A8FF" },
            };
          })
        );
      });

      // API call for featured playlists
      spotifyApi.getFeaturedPlaylists().then((data: any) => {
        setFeaturedPlaylists(
          data.body.playlists.items.map((playlist: any) => {
            return {
              id: playlist.id,
              name: playlist.name,
              img: playlist.images[0].url,
              cardColors: { header: "#86E8D6", body: "#F9A06F" },
            };
          })
        );
      });
    }
  }, [session, spotifyApi]);

  return (
    <>
      <Head>
        <title>Groovehub</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Header />
        <div className={styles.content}>
          <div className={styles.content__left}>
            <SmallCardCarousel header={"New Releases"} content={newReleases} />
            <SmallCardCarousel header={"Hot This Week"} content={hotThisWeek} />
            <SmallCardCarousel
              header={"Playlists For You"}
              content={featuredPlaylists}
            />
          </div>
          <div className={styles.content__right}>
            right
          </div>
        </div>
      </main>
    </>
  );
}
